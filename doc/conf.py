import sys, re
from os.path import abspath
from pathlib import Path
from json import loads as json_loads


ROOT = Path(__file__).resolve().parent

sys.path.insert(0, abspath('.'))

# -- General configuration ------------------------------------------------

extensions = [
    'sphinx.ext.extlinks',
    'sphinx.ext.intersphinx',
]

templates_path = ['_templates']

source_suffix = {
    '.rst': 'restructuredtext',
}

master_doc = 'index'

project = 'Parallel prefix tree generation and exploration'
author = 'Teodor-Dumitru Ene'

version = "0.0.2"
release = version  # The full version, including alpha/beta/rc tags.

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

exclude_patterns = []

# reST settings
prologPath = "prolog.inc"
try:
    with open(prologPath, "r") as prologFile:
        rst_prolog = prologFile.read()
except Exception as ex:
    print("[ERROR:] While reading '{0!s}'.".format(prologPath))
    print(ex)
    rst_prolog = ""

# -- Options for HTML output ----------------------------------------------

html_context = {}
ctx = ROOT / 'context.json'
if ctx.is_file():
    html_context.update(json_loads(ctx.open('r').read()))

if (ROOT / "_theme").is_dir():
    html_theme_path = ["."]
    html_theme = "_theme"
    html_theme_options = {
        'logo_only': True,
        'home_breadcrumbs': False,
        'vcs_pageview_mode': 'blob',
    }
else:
    html_theme = "alabaster"

htmlhelp_basename = 'pptrees_doc'

# -- Sphinx.Ext.InterSphinx -----------------------------------------------

intersphinx_mapping = {
   'python': ('https://docs.python.org/3.7/', None)
}

# -- Sphinx.Ext.ExtLinks --------------------------------------------------
extlinks = {
   'wikipedia':  ('https://en.wikipedia.org/wiki/%s', None)
}
